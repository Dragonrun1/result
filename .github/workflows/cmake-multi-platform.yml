# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false will ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        cpp_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            cpp_compiler: cl
          - os: ubuntu-latest
            cpp_compiler: g++
          - os: ubuntu-latest
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            cpp_compiler: gcc
          - os: windows-latest
            cpp_compiler: clang
          - os: ubuntu-latest
            cpp_compiler: cl

    steps:
    - name: Checkout Project
      uses: actions/checkout@v4

    - name: Enable Developer Command Prompt on Windows
      uses: ilammy/msvc-dev-cmd@v1.13.0

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@v5

    - name: Build Project
      uses: threeal/cmake-action@v2.1.0
      with:
        build-dir: ${{ github.workspace }}/build
        cxx-compiler: ${{ matrix.cpp_compiler }}
        generator: Ninja
        options: |
          BUILD_TESTING=ON
        source-dir: ${{ github.workspace }}

    - name: CTest Project
      uses: threeal/ctest-action@v1.1.0
      with:
        test-dir: ${{ github.workspace }}/build
        verbose: true
